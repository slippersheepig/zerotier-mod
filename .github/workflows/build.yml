name: Build & Release APK

on:
  workflow_dispatch:
  repository_dispatch:
    types: [build-on-demand]
  push:
    tags:
      - 'v*.*.*'

env:
  ABIS: armeabi-v7a,arm64-v8a

jobs:
  build:
    name: Build for ABIs & Sign
    runs-on: ubuntu-latest
    outputs:
      abis: ${{ env.ABIS }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '11'
          cache: gradle

      - name: Grant gradlew permission
        run: chmod +x ./ZerotierFix/gradlew

      - name: Fetch latest core version
        id: ver
        run: |
          version=$(curl -s https://api.github.com/repos/zerotier/ZeroTierOne/releases/latest | jq -r '.name')
          ver=${version//./}
          echo "corever=$ver" >> $GITHUB_ENV
          echo "::set-output name=corever::$ver"

      - name: Patch versionName in Android
        run: |
          cd ZerotierFix/app
          sed -r -i "s/versionName \"(.*?)\"/versionName \"\1_${{ env.corever }}\"/g" build.gradle

      - name: Prepare core source
        run: |
          rm -rf ZerotierFix/externals
          mkdir -p ZerotierFix/externals/core

      - name: Clone ZeroTier Core
        uses: actions/checkout@v4
        with:
          repository: zerotier/ZeroTierOne
          path: ZerotierFix/externals/core
          ref: dev

      - name: Replace CMakeLists
        run: |
          cp ZeroTierFix-Build/CMakeLists.txt ZerotierFix/externals/core/java/CMakeLists.txt

      - name: Build & sign for each ABI
        run: |
          mkdir -p output
          for abi in ${ABIS//,/ }; do
            ./ZerotierFix/gradlew assembleRelease -PabiFilter=$abi
            cp ZerotierFix/app/build/outputs/apk/release/app-release.apk output/ZerotierFix-${{ env.corever }}-$abi.apk
            apksigner sign \
              --ks <(echo "${{ secrets.KEYSTORE }}" | base64 -d) \
              --ks-key-alias "${{ secrets.KEYSTORE_ALIAS }}" \
              --ks-pass pass:${{ secrets.KEYSTORE_PASSWORD }} \
              --key-pass pass:${{ secrets.KEY_PASSWORD }} \
              --out output/ZerotierFix-${{ env.corever }}-$abi-signed.apk \
              output/ZerotierFix-${{ env.corever }}-$abi.apk
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ZerotierFix-${{ env.corever }}
          path: output/*-signed.apk

  release:
    name: Publish GitHub Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - name: Download signed APKs
        uses: actions/download-artifact@v4
        with:
          name: ZerotierFix-${{ needs.build.outputs.corever }}
      - name: Create Release with Notes
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          generate_release_notes: true
          files: |
            *.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
