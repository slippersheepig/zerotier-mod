name: Build & Release APK

on:
  workflow_dispatch: {}
  repository_dispatch:
    types: [build-on-demand]
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build & Sign APK
    runs-on: ubuntu-latest
    outputs:
      corever: ${{ env.corever }}
    steps:
      - name: Checkout App code
        uses: actions/checkout@v4
        with:
          repository: kaaass/ZerotierFix
          path: ZerotierFix

      - name: Checkout build scripts
        uses: actions/checkout@v4
        with:
          path: ZerotierFix-Build

      - name: Setup Java JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '11'
          cache: gradle

      - name: Make gradlew executable
        run: chmod +x ZerotierFix/gradlew

      - name: Fetch ZeroTier core version
        id: ver
        run: |
          version=$(curl -s https://api.github.com/repos/zerotier/ZeroTierOne/releases/latest | jq -r '.name')
          ver=${version//./}
          echo "corever=$ver" >> $GITHUB_ENV
          echo "::set-output name=corever::$ver"

      - name: Patch versionName
        run: |
          cd ZerotierFix/app
          sed -r -i "s/versionName \"(.*?)\"/versionName \"\1_${{ env.corever }}\"/g" build.gradle

      - name: Prepare core directory
        run: |
          rm -rf ZerotierFix/externals
          mkdir -p ZerotierFix/externals/core
      - name: Checkout core source
        uses: actions/checkout@v4
        with:
          repository: zerotier/ZeroTierOne
          path: ZerotierFix/externals/core
          ref: main
      - name: Replace CMakeLists.txt
        run: |
          cp ZerotierFix-Build/CMakeLists.txt ZerotierFix/externals/core/java/CMakeLists.txt

      - name: Build Release APK
        run: |
          cd ZerotierFix
          ./gradlew assembleRelease

      - name: Sign APK
        id: sign_app
        run: |
          echo "${{ secrets.KEYSTORE }}" | base64 -d > keystore.jks
          apksigner sign \
            --ks keystore.jks \
            --ks-key-alias ${{ secrets.KEYSTORE_ALIAS }} \
            --ks-pass pass:${{ secrets.KEYSTORE_PASSWORD }} \
            app/build/outputs/apk/release/app-release.apk

      - name: Upload signed APK
        uses: actions/upload-artifact@v4
        with:
          name: ZerotierFix-${{ env.corever }}
          path: ZerotierFix/app/build/outputs/apk/release/app-release.apk

  release:
    name: Publish GitHub Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - name: Download signed APK
        uses: actions/download-artifact@v4
        with:
          name: ZerotierFix-${{ needs.build.outputs.corever }}
      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          generate_release_notes: true
          files: |
            app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
